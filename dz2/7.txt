Решение 1: 
Стандартный алгоритм, решающий данную задачу с указанными ограничениями основывается на двух указателях (p1 и p2), 
пускаемых по списку с шагом 1 и 2 элемента. 
Если в какой-то момент времени указатель p2 догонит p1 => цикл существует. 

Решение 2:
1. Будем идти по списку (сохранив указатель на первый элемент) и переворачивать указатели, образовывая обратный список
2. Если один прекрасный момент указатель на след. элемент будет не определен => цикла нет. Далее см. п. 4.
3. Если мы вернулись к изначальному указателю (на рисунках видно каким образом) => цикл есть. Далее см. п. 4.
4. Для возврата к исходному состоянию списка - пройдемся в обратном направлении, разворачивая указатели.

Итого будет выполнено не более 2n + 2n операций (если цикл на последних элементах), 
а исходя из определения, O(2n + 2n) = O(4n) = O(n). Количество необходимой памяти в каждый момент:
 указатель на первый элемент списка + 3 указателя на 3 последовательных элемента списка 
(для их корректного "разворота") => O(1 + 3) = O(4) = O(1).